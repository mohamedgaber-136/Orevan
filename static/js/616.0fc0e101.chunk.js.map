{"version":3,"file":"static/js/616.0fc0e101.chunk.js","mappings":"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","sources":["Pages/Login/Login.jsx"],"sourcesContent":["import TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { FormControl, FormLabel } from \"@mui/material\";\r\nimport loginBg from \"../../assets/LoginBg.png\";\r\nimport leftLogo from \"../../assets/LoadingLogo.png\";\r\nimport rightlogo from \"../../assets/Logo2.png\";\r\nimport \"./Login.css\";\r\nimport bcrypt from 'bcryptjs';\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { FireBaseContext } from \"../../Context/FireBase\";\r\nimport { collection, doc, getDoc, getDocs, query, where } from \"firebase/firestore\";\r\nconst Login = () => {\r\n  const navigation = useNavigate();\r\n  const [error, setError] = useState(false);\r\n  const [errorRegist, seterrorRegist] = useState(false);\r\n  const { auth,database } = useContext(FireBaseContext);\r\n  const [ShowSpinning, setShowSpinning] = useState(false);\r\n  \r\n  console.log('hi')\r\n  const formData = [\r\n    {\r\n      type: \"text\",\r\n      label: \"Email address\",\r\n    },\r\n    {\r\n      type: \"password\",\r\n      label: \"Password\",\r\n    },\r\n  ];\r\n  let navigateTime;\r\n  const UsersRef = collection(database, \"Users\")\r\n  const LoginFunc = async (e)=>{\r\n        e.preventDefault();\r\n\r\n    signInWithEmailAndPassword(auth, e.target[0].value, e.target[2].value)\r\n             .then(async (res) => {\r\n                 setError(false);\r\n                 setShowSpinning(true);\r\n                 navigateTime = setTimeout(() => navigation(`/app`), 2000);\r\n               })\r\n               .catch((error) => setError(true));       \r\n  }\r\n  // const LoginFunc = async (e) => {\r\n  //   e.preventDefault();\r\n  //    getDocs(query(UsersRef,where('Email','==',e.target[0].value))).then((res)=>{\r\n      \r\n  //        if(res.docs.length){\r\n  //       seterrorRegist(false)\r\n  //       setError(false);\r\n  //       createUserWithEmailAndPassword(auth,e.target[0].value, e.target[2].value).then(()=>  navigateTime = setTimeout(() => navigation(`/app`), 2000)).catch(()=>{\r\n  //         signInWithEmailAndPassword(auth, e.target[0].value, e.target[2].value)\r\n  //         .then(async (res) => {\r\n  //           seterrorRegist(false)\r\n  //             setError(false);\r\n  //             setShowSpinning(true);\r\n  //             navigateTime = setTimeout(() => navigation(`/app`), 2000);\r\n  //           })\r\n  //           .catch((error) => setError(true));\r\n  //       })    \r\n  //     }else{\r\n  //       seterrorRegist(true)\r\n  //     }\r\n  //    })\r\n   \r\n  // };\r\n  useEffect(() => {\r\n    return ()=> clearTimeout(navigateTime);\r\n  }, []);\r\n  return (\r\n    <div className=\"d-flex justify-content-around vh-100 flex-column align-items-center flex-column \">\r\n      <div className=\" d-flex justify-content-center pt-3 flex-column align-items-center   container\">\r\n        <div className=\"  d-flex justify-content-center align-items-center w-100 h-100 \">\r\n          <div className=\"  LoginBorder  h-100  d-flex justify-content-center flex-column align-items-center \">\r\n            <div className=\"d-flex flex-column pt-2 gap-2\">\r\n              <h2 className=\"LoginTitle fs-1 \">Login</h2>\r\n              <h6 className=\"text-secondary fs-6\">\r\n                Please Enter your email to Connect\r\n              </h6>\r\n            </div>\r\n            <Formik>\r\n              {() => (\r\n                <Form onSubmit={LoginFunc}>\r\n                  <FormControl className=\"p-3  \">\r\n                    <span className=\"text-danger\">\r\n                      {error && \"Invalid Email or Password\"}\r\n                      {errorRegist && \"This Email Not Registerd\"}\r\n                    </span>\r\n                    {formData.map((item, indx) => (\r\n                      <div className=\"d-flex flex-column gap-2 mb-4\" key={indx}>\r\n                        <FormLabel className=\"LoginTitle fw-bold\">\r\n                          {item.label}\r\n                        </FormLabel>\r\n                        <TextField\r\n                          className=\"px-5 py-0 rounded rounded-1 w-100\"\r\n                          type={`${item.type}`}\r\n                        />\r\n                      </div>\r\n                    ))}\r\n                    <div className=\"d-flex justify-content-between align-items-center\">\r\n                      <FormControlLabel\r\n                        className=\"RememberMeLabel\"\r\n                        control={<Checkbox defaultChecked />}\r\n                        label=\"Remember me\"\r\n                      />\r\n                      <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n                        <span className=\" fw-semibold ForgotContent\">\r\n                          Forgot password?\r\n                        </span>\r\n                        <span className=\"OrangeGradient\">Contact us</span>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <Button\r\n                      type=\"submit\"\r\n                      className=\"w-100 LoginBtn d-flex gap-2 border\"\r\n                    >\r\n                      <span className=\"text-white\">Login</span>{\" \"}\r\n                      {ShowSpinning && (\r\n                        <i className=\"gg-spinner-two-alt text-white \"></i>\r\n                      )}\r\n                    </Button>\r\n                  </FormControl>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </div>\r\n          <div className=\" loginImgParent px-2  h-100 d-flex justify-content-center align-items-center \">\r\n            <div className=\"container flex-column  h-100 d-flex justify-content-center align-items-start\">\r\n              <img src={loginBg} alt=\"LoginBg\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"d-flex px-3 justify-content-between w-100 align-items-center LoginFooter\">\r\n        <div className=\"LeftLogo w-25 \">\r\n          <img src={leftLogo} alt=\"\" />\r\n        </div>\r\n        <div className=\"RighLogo \">\r\n          <img src={rightlogo} alt=\"\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Login;\r\n"],"names":["Login","navigation","useNavigate","error","setError","useState","errorRegist","seterrorRegist","auth","database","useContext","FireBaseContext","ShowSpinning","setShowSpinning","console","log","formData","type","label","navigateTime","collection","LoginFunc","async","e","preventDefault","signInWithEmailAndPassword","target","value","then","setTimeout","catch","useEffect","clearTimeout","_jsxs","className","children","_jsx","Formik","Form","onSubmit","FormControl","map","item","indx","FormLabel","TextField","concat","FormControlLabel","control","Checkbox","defaultChecked","Button","src","loginBg","alt","leftLogo","rightlogo"],"sourceRoot":""}